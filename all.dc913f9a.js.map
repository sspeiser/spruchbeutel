{"version":3,"sources":["config.ts","configToDoc.ts","all.ts"],"names":[],"mappings":";AAWO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,YAAA,EATA,IAAM,EAAoC,CAC7C,MAAO,gBACP,SAAU,uCACV,UAAW,uCACX,SAAU,cACV,YAAa,0BACb,aAAc,uDAGX,QAAA,OAAA,EAAA,IAAM,EAAmB,CAC5B,6BACA,8BACA,qCAHG,QAAA,OAAA;;ACJN,aAPK,SAAU,EAAY,GACJ,IAAA,IAAA,EAAA,EAAA,EAAA,OAAO,KAAK,GAAZ,EAAA,EAAA,OAAA,IAAqB,CAA9B,IAAA,EAAK,EAAA,GACN,EAAU,OAAO,SAAS,eAAe,GAC3C,GAAW,EAAO,KAClB,EAAQ,UAAY,EAAO,KAGtC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA;;ACWA,aAlBD,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,iBAGA,OAAO,SAAS,MAAQ,EAAO,OAAA,OAC/B,EAAY,EAAA,aAAA,EAAZ,QAEA,IAAI,GAAQ,EAEN,EAAQ,OAAO,SAAS,eAAe,SACvC,EAAc,MAAA,OAAK,EAAL,EAAO,cAC3B,GAAI,GAAS,aAAiB,gBAAkB,EACtB,IAAA,IAAA,EAAA,EAAA,EAAA,EAAtB,OAAsB,EAAA,EAAA,OAAA,IAAQ,CAApB,IAAA,EAAQ,EAAA,GACR,EAAW,EAAM,WAAU,GACjC,EAAS,UAAY,EACrB,EAAS,UAAU,OAAO,aAC1B,EAAY,OAAO","file":"all.dc913f9a.js","sourceRoot":"../src","sourcesContent":["// Escape HTML!\n\nexport const config: { [string: string]: any } = {\n    title: \"Random Quotes\",\n    headline: \"Ask the Spruchbeutel for some quotes\",\n    impressum: \"Impressum: created with Spruchbeutel\",\n    backlink: \"Zur&uuml;ck\",\n    showalllink: \"Zeige alle Spr&uuml;che\"\n    initialquote: \"Klicke auf den Beutel, um einen Spruch zu erhalten.\"\n}\n\nexport const quotes: string[] = [\n    \"This quote is quite boring\",\n    \"This quote is really boring\",\n    \"This quote is the most boring one\"\n]","export function configToDoc(config: {[string: string]: string}) {\n    for (const field of Object.keys(config)) {\n        const element = window.document.getElementById(field);\n        if (element && config[field]) {\n            element.innerHTML = config[field];\n        }\n    }\n}\n","import { config, quotes } from './config';\nimport { configToDoc } from './configToDoc';\n\n\nwindow.document.title = config.title;\nconfigToDoc(config);\n\nlet first = true;\n\nconst quote = window.document.getElementById(\"quote\");\nconst quoteParent = quote?.parentElement;\nif (quote && quote instanceof HTMLDivElement && quoteParent) {\n    for(const quoteStr of quotes) {\n        const newQuote = quote.cloneNode(true) as HTMLDivElement;\n        newQuote.innerHTML = quoteStr;\n        newQuote.classList.remove(\"invisible\");\n        quoteParent.append(newQuote);\n    }\n}"]}